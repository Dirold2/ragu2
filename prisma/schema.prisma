generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Queue {
  id          Int      @id @default(autoincrement())
  channelId   String
  guildId     String   @default("")
  priority    Boolean
  lastTrackId String?
  waveStatus  Boolean?
  loop        Boolean? @default(false)
  volume      Int?
  tracks      Tracks[]
  Playlist    Playlist[]

  @@unique([channelId, priority])
  @@index([channelId])
}

model Tracks {
  id        Int       @id @default(autoincrement())
  trackId   String
  addedAt   BigInt
  info      String
  url       String
  source    String
  requestedBy String?
  queueId   Int
  Queue     Queue     @relation(fields: [queueId], references: [id])

  @@index([trackId])
  @@index([queueId])
}

model Playlist {
  id        Int       @id @default(autoincrement())
  trackId   String
  addedAt   BigInt
  info      String
  url       String
  source    String
  requestedBy String?
  queueId   Int
  Queue     Queue     @relation(fields: [queueId], references: [id])
}

model GlobalHistory {
  id        Int      @id @default(autoincrement())
  trackId   String
  info      String
  playedAt  DateTime @default(now())
  playCount Int      @default(1)

  @@index([trackId])
}

model UserHistory {
  id        Int      @id @default(autoincrement())
  requestedBy String
  trackId   String
  info      String
  playedAt  DateTime @default(now())
  playCount Int      @default(1)

  @@index([requestedBy, trackId])
}